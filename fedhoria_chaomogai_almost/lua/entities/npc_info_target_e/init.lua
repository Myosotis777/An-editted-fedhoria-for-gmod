AddCSLuaFile('cl_init.lua') AddCSLuaFile('shared.lua') include('shared.lua') ENT.Model = "" ENT.health = 4ENT.dead = false  ENT.deadtime = 0function ENT:Initialize()    self:SetModel( "models/editor/cube_small.mdl" )    self:SetModelScale(2.2)self:SetHullType ( HULL_TINY )    self:SetHullSizeNormal()    self:SetNoDraw(true) self:SetHealth(self.health)local pos = self:GetBody():GetPos()pos.z = pos.z - 64self:SetPos(pos)end  function ENT:Think()   	local body = self:GetBody()	if !IsValid(body) then		self:Remove() 		return	end	if self.dead and (CurTime()-self.deadtime>1.8 or (CurTime()-self.deadtime>1.0 and self:Health()<-6)) then		self:Killed()	end	local pos = self:GetBody():GetPos()	self.Spine = body:LookupBone("ValveBiped.Bip01_Spine2")	if (self.Spine) then		local matrix = body:GetBoneMatrix(self.Spine)		pos = matrix:GetTranslation()	endpos.z = pos.z - 64self:SetPos(pos)--self:RandomSoundEmit()  end   function ENT:OnTakeDamage(dmg)    self:SetHealth(self:Health() - dmg:GetDamage())     if self:Health() <= 0 && !self.dead then    self.dead = trueself.deadtime = CurTime()--self:Killed()local target=self:GetBody()if target.Springs then    --print("clear springs")	for _, v in pairs(target.Springs) do		SafeRemoveEntityDelayed(v,0)	endendend end  function ENT:Killed()    --local ragdoll = ents.Create( "prop_ragdoll" ) 	--ragdoll:SetModel( self.Model ) 	ragdoll:SetPos( self:GetPos() ) 	--ragdoll:SetSkin( self:GetSkin() ) 	--ragdoll:SetAngles( self:GetAngles() ) 	--ragdoll:Spawn()     --ragdoll:SetCollisionGroup( COLLISION_GROUP_DEBRIS ) 	--ragdoll:GetPhysicsObject():AddVelocity( Vector( math.Rand( -150, 150 ), math.Rand( -150, 150 ), math.Rand( -150, 50 ) ) )     self:Remove() 	 	--undo.Create("Flareon") 		--undo.AddEntity(ragdoll) --for k,v in pairs( player.GetAll()) do undo.SetPlayer(v) end 	undo.Finish() 	 end function ENT:OnRemove()   --timer.Stop("evolve") endfunction ENT:Relations(npc)local npc = self--- Be Hostile to :local citizens = ents.FindByClass( "npc_citizen" )	for _, x in pairs( citizens ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 99 )		npc:AddEntityRelationship( x, D_HT, 99 )		end	endlocal alyx = ents.FindByClass( "npc_alyx" )	for _, x in pairs( alyx ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal monk = ents.FindByClass( "npc_monk" )	for _, x in pairs( monk ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal barney = ents.FindByClass( "npc_barney" )	for _, x in pairs( barney ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal D0G = ents.FindByClass( "npc_dog" )	for _, x in pairs( D0G ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal vorts = ents.FindByClass( "npc_vortigaunt" )	for _, x in pairs( vorts ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then-- and x:GetName() ~= "HostileVort" and x:GetName() ~= "HostileSlaveVort" then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal eli = ents.FindByClass( "npc_eli" )	for _, x in pairs( eli ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal kleiner = ents.FindByClass( "npc_kleiner" )	for _, x in pairs( kleiner ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal gman = ents.FindByClass( "npc_gman" )	for _, x in pairs( gman ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal mossman = ents.FindByClass( "npc_mossman" )	for _, x in pairs( mossman ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal magnusson = ents.FindByClass( "npc_magnusson" )	for _, x in pairs( magnusson ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_HT, 999 )		npc:AddEntityRelationship( x, D_HT, 999 )		end	endlocal friendlyrollermines = ents.FindByClass( "npc_rollermine" )	for _, x in pairs( friendlyrollermines ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		if x:GetSkin() == 1 then		x:AddEntityRelationship( npc, D_HT, 99 )		npc:AddEntityRelationship( x, D_HT, 99 )		end		end	end	------------- | COMBINE NPCS | -------------		local combines = ents.FindByClass( "npc_combine_s" ) 	for _, x in pairs( combines ) do		if !x:IsNPC() then return end 		--if x:GetClass() != self:GetClass() then-- and x:GetName() ~= "FriendlyCombineSoldier" and x:GetName() ~= "FriendlyCombineElite" and x:GetName() ~= "FriendlyArmouredCombineSoldier" and x:GetName() ~= "FriendlyArmouredCombineElite" and x:GetName() ~= "FriendlyCombineShotgunner" and x:GetName() ~= "FriendlyPrisonGuard" and x:GetName() ~= "FriendlyPrisonShotgunner" then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		--end	endlocal metrocoops = ents.FindByClass( "npc_metropolice" ) 	for _, a in pairs( metrocoops ) do		if !a:IsNPC() then return end 		--if a:GetClass() != self:GetClass() then-- and a:GetName() ~= "FriendlyMetroCop" and a:GetName() ~= "Zach88889NPC" then 		a:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( a, D_LI, 99 )		--end	endlocal strider = ents.FindByClass( "npc_strider" ) 	for _, x in pairs( strider ) do 		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal clawscanner = ents.FindByClass( "npc_clawscanner" )	for _, x in pairs( clawscanner ) do		if !x:IsNPC() then return end 		if x:GetClass() != self:GetClass() then		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal cityscanner = ents.FindByClass( "npc_cscanner" )	for _, x in pairs( cityscanner ) do 		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then		x:AddEntityRelationship( npc, D_LI, 99 ) 		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal camera = ents.FindByClass( "npc_combine_camera" )	for _, x in pairs( camera ) do 		if !x:IsNPC() then return end 		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal floorturret = ents.FindByModel( "models/combine_turrets/floor_turret" )	for _, x in pairs( floorturret ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal hunters = ents.FindByClass( "npc_hunter" )	for _, x in pairs( hunters ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then-- and x:GetName() ~= "FriendlyHunter" then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal stalkers = ents.FindByClass( "npc_stalker" )	for _, x in pairs( stalkers ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal rollermine = ents.FindByClass( "npc_rollermine" )	for _, x in pairs( rollermine ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 				x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal manhacks = ents.FindByClass( "npc_manhack" )	for _, x in pairs( manhacks ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal gunships = ents.FindByClass( "npc_combinegunship" )	for _, x in pairs( gunships ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal groundturrets = ents.FindByClass( "npc_turret_ground" )	for _, x in pairs( groundturrets ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal ceilingturrets = ents.FindByClass( "npc_turret_ceiling" )	for _, x in pairs( ceilingturrets ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal dropships = ents.FindByClass( "npc_combinedropship" )	for _, x in pairs( dropships ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal breen = ents.FindByClass( "npc_breen" )	for _, x in pairs( breen ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then 		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	endlocal helicopters = ents.FindByClass( "npc_helicopter" )	for _, x in pairs ( helicopters ) do		if !x:IsNPC() then return end		if x:GetClass() != self:GetClass() then-- and x:GetName() ~= "LambdaChopper" then		x:AddEntityRelationship( npc, D_LI, 99 )		npc:AddEntityRelationship( x, D_LI, 99 )		end	end	end